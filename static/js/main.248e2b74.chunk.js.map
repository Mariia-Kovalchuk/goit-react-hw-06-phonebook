{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","components/Phonebook/Phonebook.js","redux/Phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","PhonebookActions","addContact","createAction","name","number","payload","id","v4","deleteContact","filterContacts","itemsReducer","createReducer","state","filter","filterReducer","_","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","Phonebook","children","className","styles","container","GetContactList","GetFilter","GetFilteredContactList","toLowerCase","includes","sort","a","b","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","style","contactForm","onSubmit","preventDefault","options","find","contact","alert","input","type","onChange","pattern","title","required","button","ContactList","contactsList","map","contactItem","listItem","listItemText","onClick","Filter","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.248e2b74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__8akPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2zsz5\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 } from 'uuid';\r\n\r\n\r\nconst addContact = createAction('phonebook/add', ({ name, number }) => ({\r\n    payload: {\r\n        id: v4(),\r\n        name,\r\n        number,\r\n    }\r\n}));\r\n\r\nconst deleteContact = createAction('phonebook/delete')\r\nconst filterContacts = createAction('phonebook/filter')\r\n\r\nexport const PhonebookActions = { addContact, deleteContact, filterContacts }\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { PhonebookActions } from './phonebook-actions';\r\n\r\nconst itemsReducer = createReducer( [], {\r\n    [PhonebookActions.addContact]: (state, {payload})=>[...state, payload],\r\n    [PhonebookActions.deleteContact]:(state, {payload})=> state.filter(({ id }) => id !== payload)\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n    [PhonebookActions.filterContacts]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phonebookReducer from './Phonebook/phonebook-reducer'\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from './Phonebook.module.css';\r\n\r\nconst Phonebook = ({ children }) => <div className={styles.container}>{children}</div>;\r\n\r\nPhonebook.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Phonebook;","export const GetContactList = state => state.contacts.items;\r\nexport const GetFilter = state => state.contacts.filter;\r\n\r\nexport const GetFilteredContactList = state => {\r\n    const contacts = GetContactList(state);\r\n    const filter = GetFilter(state);\r\n   return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())).sort((a, b) => a.name > b.name ? 1 : -1);\r\n}","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { GetContactList } from '../../redux/Phonebook/phonebook-selectors';\r\nimport { PhonebookActions } from \"../../redux/Phonebook/phonebook-actions\";\r\nimport style from './ContactForm.module.css'\r\n\r\n\r\n\r\nfunction ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const contacts = useSelector(GetContactList);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const options = { name, number };\r\n\r\n        if (contacts.find((contact) => name.toLowerCase() === contact.name.toLowerCase())\r\n        ) {\r\n            alert(`${name} is already exists`);\r\n        } else if (contacts.find((contact) => number === contact.number)) {\r\n            alert(`${number} is already exists`);\r\n        } else {\r\n            dispatch(PhonebookActions.addContact(options));\r\n        }\r\n        setName('');\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <form className={style.contactForm} onSubmit={handleSubmit}>\r\n            <label > Name\r\n                <input className={style.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n\r\n            <label > Number\r\n                <input className={style.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять из не менее 5 цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            </label>\r\n\r\n\r\n            <button type=\"submit\" className={style.button}>\r\n                Сохранить\r\n            </button>\r\n\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nexport default ContactForm;","import style from './ContactList.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { GetFilteredContactList } from \"../../redux/Phonebook/phonebook-selectors.js\";\r\nimport { PhonebookActions } from '../../redux/Phonebook/phonebook-actions'\r\n\r\n\r\nconst ContactList = () => {\r\n    const contacts = useSelector(GetFilteredContactList);\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <ul className={style.contactsList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} className={style.contactItem}>\r\n                    <span className={style.listItem}>\r\n                        <p className={style.listItemText}>{name}</p>\r\n                        <p className={style.listItemText}>{number}</p>\r\n                    </span>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => dispatch(PhonebookActions.deleteContact(id))}\r\n                        className={style.button}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\n\r\nexport default ContactList;","import style from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { GetFilter } from \"../../redux/Phonebook/phonebook-selectors.js\";\r\nimport { PhonebookActions } from '../../redux/Phonebook/phonebook-actions'\r\n\r\n\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(GetFilter)\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={(e)=>dispatch(PhonebookActions.filterContacts(e.target.value))} className={style.input} />\r\n    </label>\r\n  )\r\n};\r\n\r\nexport default Filter;\r\n","import Phonebook from './components/Phonebook';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <Phonebook>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Phonebook>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__jOvSQ\",\"contactItem\":\"ContactList_contactItem__3MiA3\",\"listItem\":\"ContactList_listItem__2NfQn\",\"listItemText\":\"ContactList_listItemText__2PgRe\",\"button\":\"ContactList_button__3VLME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__2vxW9\",\"button\":\"ContactForm_button__36UJY\"};"],"sourceRoot":""}